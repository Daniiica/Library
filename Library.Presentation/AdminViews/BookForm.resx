<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bookIconTabControl.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="bookIconTabControl.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACI
        DQAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJBIAAzEBTwMzAdEDNgHMAzYBzAM2AcwDNgHMAzYBzAM2AcwDNgHMAzYBzAM2
        AcwDJgHgAyYB4AM2AcwDNgHMAzYBzAM2AcwDNgHMAzYBzAM2AcwDNgHMAzYBzAMzAdEDMQFPBAADBwEJ
        AywB2QNBAbMDQQGzA0EBswNBAbMDQQGzA0EBswNBAbMDQQGzA0EBswNBAbMDQQGzA0EBswNBAbMDQQGz
        A0EBswMjATMDQwGJA0EBswMsAdkDBwEJxAADMwHRAx8BLAMvAUoDDwEUGwABAQNBAX0DQgGCAwMBBBgA
        AwoBDQMtAUYDHwEsAzMB0QQAAwcBCgMvAdcDRAGXA0QBlwNEAZcDRAGXA0QBlwNEAZcDRAGXA0QBlwNE
        AZcDRAGXA0QBlwNEAZcDRAGXA0QBlwNEAZcDRAGXA0QBlwNEAZcDLwHXAwcBCsQAAzYBzAM6AWYDPAG/
        Az0BvAM1Ac8DOgHFA0IBrgNEAZ8DRAGbA0EBsAMzAdEDRAGgA0QBlwM1Ac8DPgG9A0QBnwNEAZwDQwGn
        Az0BvAM1Ac8DOwHDAzoBwgM6AWYDNgHMCAADEgEYAzoBZgNDAaQDQwGWAyEBMAMcAeoDFQHvAxgBIgMU
        ARwDFAEcAxQBHAMUARwDFAEcAxQBHAMUARwDFAEcAzoBZQM+AXMDFAEcAw8BFMgAAzYBzAM6AWYDOgFm
        CAADBwEJAxcEIAEuAyEBMQMWAR4DAAEBAy4BSANDAZEDDwEUAw0BEgMfAS0DIQEwAxsBJgMNARIIAAM6
        AWYDOgFmAzYBzAgAAzABTQNEAZ8DOgFkAz4BcwMeAekDPQFuAy8B1gQAAwQBBQM/AbkDPwG5AwQBBRAA
        AzMBUwM5AWHQAAM2AcwDOgFmAzoBZiAAAzoBZgNCAawDNQHPA0ABewMKAQ0UAAM6AWYDOgFmAzYBzAgA
        AzMBUwM4AWAEAAMDAQQDMQHTAzoBZgM6AWQEAAMIAQsDOgHEAzoBxAMIAQsQAAM9AW4DLwFK0AADNgHM
        AzoBZgM6AWYgAAM6AWYDOgFmAwUBBwM8AWsDMwHQA0EBfgMPARQMAAM6AWYDOgFmAzYBzAgAAzABTgM7
        AWkEAAMDAQQDPwG2Az4BvgMEAQUIAAMSARkDEgEYEAADAQECAz4BuwMIAQvQAAM2AcwDOgFmAzoBZgQA
        Az0BvAM4AccDQgGpA0QBnANEAaYDQgGyBAADOgFmAzoBZggAAwUBBwM5AWMDOAHKA0MBogMqAUAEAAM6
        AWYDOgFmAzYBzAgAAwoBDQM9AbwDRAGPA0QBmwMeAekDOQFiBwABAQNDAZkDQgGCA0IBggNDAZkDAAEB
        BAADAwEEA0QBlAM3AV7UAAM2AcwDOgFmAzoBZggAAwcBCQMaASQDIQEwAxsBJgMGAQgEAAM6AWYDOgFm
        AxcBIAMjATMMAAMmATkDJgHfAwIBAwM6AWYDOgFmAzYBzAwAAwMBBANEAZcDOQFiAzkByAM+Ab0DQgGB
        A0QBnQM9AW4DQgGyA0IBsgM9AW4DRAGdA0IBgQM+Ab0DNQFZ2AADNgHMAzoBZgM6AWYEAANDAYUDOQFj
        AysBQwMkATYDKgFBAzUBVwQAAzoBZgM6AWYDFwEgA0IBrwM/AbYDKwFDAwABAQQAAzkByQMCAQMDOgFm
        AzoBZgM2AcwMAAMLAQ8DPwG5AzwBawM4AV8DBAEFAyQBNgM8AWsDOQHJA0MBpQNDAaUDOAHKAz0BbAMk
        ATYDBAEF3AADNgHMAzoBZgM6AWYEAAMlATcDPQFsA0MBiwNDAZYDQgGMAzkBYwQAAzoBZgM6AWYIAAMe
        ASsDRAGbAzwBwAQAAzkByQMCAQMDOgFmAzoBZgM2AcwMAAM1AVcDQgGBAz4BvQMDAQQEAAMCAQMDOwFn
        AzAB1QNCAbIDQQGzAzAB1QM6AWYDAQEC4AADNgHMAzoBZgM6AWYEAAMYASIDAwEEDwABAQQAAzoBZgM6
        AWYDKQE/AzoBxQMyAVEDAQECCAADOQHJAwIBAwM6AWYDOgFmAzYBzAwAAwoBDQNDAYQDIwE0CAADHwEs
        AzoBZgMEAQUIAAMEAQUDPAFqA0IBrAMFAQfcAAM2AcwDOgFmAzoBZgQAA0QBmgM2AcsDNQHNAzYBzAM1
        Ac0DPwG6BAADOgFmAzoBZgQAAxUBHQNEAZADNQHOAz4BcQQAAzkByQMCAQMDOgFmAzoBZgM2AcwcAANE
        AY4DIAEuBAADAQECAz0BbAM9AWwDAQECBAADMAFNA0QBj9wAAzYBzAM6AWYDOgFmIAADOgFmAzoBZgMj
        ATMDOgFlAwUBBwMKAQ4DMQFPBAADOQHJAwIBAwM6AWYDOgFmAzYBzBgAAxABFgNCAawLAAEBAyoBQQMq
        AUEDAAEBCAADQgGsAxABFtgAAzYBzAM6AWYDOgFmBAADQQGwA0MBlgM/AXYDOwFpAz8BdANDAYkEAAM6
        AWYDOgFmAwoBDQNBAX0DMwHQA0ABdwMQARUEAAM5AckDAgEDAzoBZgM6AWYDNgHMFAADPQFtAzkByQNE
        AaADPwG5Az8BuANCAYEDAAEBAwABAQNCAYEDPwG4Az8BuQNEAaADOQHIAzABTdQAAzYBzAM6AWYDOgFm
        BAADCQEMAyYBOQM1AVcDOQFjAzUBWQMiATIEAAM6AWYDOgFmAwkBDAMLAQ8DBwEKAzsBaANCAawEAAM5
        AckDAgEDAzoBZgM6AWYDNgHMEAADGQEjA0QBowM8AWoDMgHSAwgBCwQAA0EBfQMzAVMDMwFUA0EBfQQA
        AwgBCwMyAdIDPQFuAz4BvQMCAQPQAAM2AcwDOgFmAzoBZgQAAzMBUwMhATADDAEQAwMBBAMKAQ4DGwEm
        BAADOgFmAzoBZgMjATMDNQHPA0MBhAMSARgIAAM5AckDAgEDAzoBZgM6AWYDNgHMEAADIAEvA0IBjAM/
        AXQDQwGTCAADIwE0Ay4B2AMuAdgDIwE0CAADQwGTAz8BdANBAbUDBQEH0AADNgHMAzoBZgM6AWYEAAM7
        AWgDRAGfAz4BvQM5AckDPAG/A0QBlQQAAzoBZgM6AWYEAAMEAQUDNwFdAzoBxgNEAaMEAAM5AckDAgED
        AzoBZgM6AWYDNgHMEwABAQNEAaMDOgHFAz4BvgMcAScDBwEJA0QBoQMoATwDKAE8A0QBoQMHAQkDHAEn
        Az4BvgM2AcsDQgGC1AADPwG5AzoBZgM6AWYgAAM6AWYDOgFmAykBPwNEAZgDGAEiBAADFgEeBAADOQHJ
        AwIBAwM6AWYDOgFmAz8BuRQAAzIBUgM6AWUDPQFvAzsBwwNCAa8DMgFQCAADMgFQA0IBrwM7AcMDPQFv
        AzoBZQMyAVLYAAM6AWYDOgFmIAADOgFmAzoBZgMAAQEDLwFKAzwBvwNCAakDKgFABAADOQHJAwIBAwM6
        AWYDOgFmGAADPQFsAy4BSAMyAVEDOwFnCAADAwEEAwMBBAgAAzsBZwMyAVEDLgFIAz0BbNgAAzcBXQM5
        AcgDQAF6AzABTgMfASwDDwEUAwUBBwMDAQQDEQEXAzABTAM/AboDNwFdDAADJAE1A0IBgQQAAzkByQMW
        AR4DNgHMAzcBXRgAAzcBXgM1AVgDCgENAzwBvwNDAZYDPwG5A0EBsANBAbADPwG5A0MBlgM8Ab8DCgEN
        AzUBWAM3AV7cAAMYASIDNQFXA0IBgQNDAaIDPwG4AzoBxQM4AccDPwG3A0IBiAMnATsDEgEZAzYBywMw
        AU4QAAM5AckDBAEGAxIBGRwAAxoBJQNEAZcEAAMHAQkDGAEiEAADGAEiAwcBCQQAA0QBmAMaASX/AAkA
        AxIBGQNEAZwDPQG8AyYBOggAAzkByQMCAQMkAANCAa8DGwEmIAADBQEHA0QBpv8AFQADHgErA0MBqgM/
        AboDLgFIAzYBywMCAQMkAAMUARsDPgG9AzUBWAMFAQcQAAMFAQcDNQFYAzQBVf8AIQADHAEnA0QBlQMh
        AeUDAQECKAADBwEJAz0BbQNBAbMDQQG1A0EBswNAAbQDQQG1A0EBswM9AW0DBwEJ3AABQgFNAT4HAAE+
        AwABKAMAAWADAAEYAwABAQEAAQEFAAEgAQEWAAP/BAABgAEAAQEGAAEPAcMB8AGAAQABAQkAAcABAAED
        BgABGAEAARgBwAFDAc8GAAEfAeAB+AHIAUMBzwYAAR8B4AE4AcgBZwGPBgABEAEmAQgBwAGBAR8GAAEY
        ASEBwAHgAQABPwYAARACIAHgAQABfwYAARABJgEgAeEBAAH/BgABEwGgAWAB4wEYAX8GAAEQASQBIAH+
        AUIBfwYAAR8B4AEgAfwBwwE/BgABEAIgAfgBAAEfBgABEAIgAfABQgEPBgABEAEgAWAB8AHDAQ8GAAEQ
        ASQBIAHwAQABHwYAAR8B4AGgAfgBGAEfBgABnwHgASEB+AFmAR8GAAGAAQcBIQH4AQABHwYAAcABAQHj
        AfkBPAGfBgAB/wH4AWcB/AH/AT8GAAH/Af4BBwH8ATwBfwYAAv8BhwH+AQABfwYACw==
</value>
  </data>
</root>