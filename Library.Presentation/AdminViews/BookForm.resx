<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bookIconTabControl.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="bookIconTabControl.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACK
        DQAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJBIAAy0BTwMfAdEDIQHMAyEBzAMhAcwDIQHMAyEBzAMhAcwDIQHMAyEBzAMh
        AcwDFgHgAxYB4AMhAcwDIQHMAyEBzAMhAcwDIQHMAyEBzAMhAcwDIQHMAyEBzAMfAdEDLQFPBAADBwEJ
        AxoB2QMsAbMDLAGzAywBswMsAbMDLAGzAywBswMsAbMDLAGzAywBswMsAbMDLAGzAywBswMsAbMDLAGz
        AywBswMhATMDNAGJAywBswMaAdkDBwEJxAADHwHRAx4BLAMrAUoDDwEUGwABAQM0AX0DNAGCAwMBBBgA
        AwoBDQMqAUYDHgEsAx8B0QQAAwcBCgMbAdcDMgGXAzIBlwMyAZcDMgGXAzIBlwMyAZcDMgGXAzIBlwMy
        AZcDMgGXAzIBlwMyAZcDMgGXAzIBlwMyAZcDMgGXAzIBlwMyAZcDGwHXAwcBCsQAAyEBzAMyAWYDJwG/
        AygBvAMgAc8DJAHFAy0BrgMxAZ8DMgGbAywBsAMfAdEDMQGgAzIBlwMgAc8DKAG9AzEBnwMxAZwDLwGn
        AygBvAMgAc8DJgHDAyUBwgMyAWYDIQHMCAADEgEYAzIBZgMwAaQDMgGWAyABMAMPAeoDDAHvAxgBIgMU
        ARwDFAEcAxQBHAMUARwDFAEcAxQBHAMUARwDFAEcAzIBZQM0AXMDFAEcAw8BFMgAAyEBzAMyAWYDMgFm
        CAADBwEJAxcBIAMfAS4DIAExAxUBHgMAAQEDKgFIAzMBkQMPARQDDQESAx4BLQMgATADGgEmAw0BEggA
        AzIBZgMyAWYDIQHMCAADLAFNAzEBnwMyAWQDNAFzAxAB6QMzAW4DHAHWBAADBAEFAykBuQMpAbkDBAEF
        EAADLgFTAzIBYdAAAyEBzAMyAWYDMgFmIAADMgFmAy4BrAMgAc8DNAF7AwoBDRQAAzIBZgMyAWYDIQHM
        CAADLgFTAzEBYAQAAwMBBAMdAdMDMgFmAzIBZAQAAwgBCwMlAcQDJQHEAwgBCxAAAzMBbgMrAUrQAAMh
        AcwDMgFmAzIBZiAAAzIBZgMyAWYDBQEHAzIBawMfAdADNAF+Aw8BFAwAAzIBZgMyAWYDIQHMCAADLAFO
        AzIBaQQAAwMBBAMqAbYDKAG+AwQBBQgAAxIBGQMSARgQAAMBAQIDKAG7AwgBC9AAAyEBzAMyAWYDMgFm
        BAADKAG8AyMBxwMuAakDMQGcAy8BpgMsAbIEAAMyAWYDMgFmCAADBQEHAzIBYwMiAcoDMAGiAycBQAQA
        AzIBZgMyAWYDIQHMCAADCgENAygBvAMzAY8DMgGbAxAB6QMyAWIHAAEBAzIBmQM0AYIDNAGCAzIBmQMA
        AQEEAAMDAQQDMwGUAzEBXtQAAyEBzAMyAWYDMgFmCAADBwEJAxkBJAMgATADGgEmAwYBCAQAAzIBZgMy
        AWYDFwEgAyEBMwwAAyQBOQMWAd8DAgEDAzIBZgMyAWYDIQHMDAADAwEEAzIBlwMyAWIDIwHIAygBvQM0
        AYEDMQGdAzMBbgMsAbIDLAGyAzMBbgMxAZ0DNAGBAygBvQMvAVnYAAMhAcwDMgFmAzIBZgQAAzQBhQMy
        AWMDKQFDAyMBNgMoAUEDLwFXBAADMgFmAzIBZgMXASADLQGvAyoBtgMpAUMDAAEBBAADIwHJAwIBAwMy
        AWYDMgFmAyEBzAwAAwsBDwMpAbkDMgFrAzEBXwMEAQUDIwE2AzIBawMjAckDLwGlAy8BpQMiAcoDMwFs
        AyMBNgMEAQXcAAMhAcwDMgFmAzIBZgQAAyMBNwMzAWwDNAGLAzIBlgMzAYwDMgFjBAADMgFmAzIBZggA
        Ax0BKwMyAZsDJwHABAADIwHJAwIBAwMyAWYDMgFmAyEBzAwAAy8BVwM0AYEDKAG9AwMBBAQAAwIBAwMy
        AWcDHQHVAywBsgMsAbMDHQHVAzIBZgMBAQLgAAMhAcwDMgFmAzIBZgQAAxgBIgMDAQQPAAEBBAADMgFm
        AzIBZgMnAT8DJAHFAy0BUQMBAQIIAAMjAckDAgEDAzIBZgMyAWYDIQHMDAADCgENAzQBhAMiATQIAAMe
        ASwDMgFmAwQBBQgAAwQBBQMyAWoDLgGsAwUBB9wAAyEBzAMyAWYDMgFmBAADMgGaAyIBywMgAc0DIQHM
        AyABzQMpAboEAAMyAWYDMgFmBAADFQEdAzMBkAMgAc4DMwFxBAADIwHJAwIBAwMyAWYDMgFmAyEBzBwA
        AzQBjgMfAS4EAAMBAQIDMwFsAzMBbAMBAQIEAAMsAU0DMwGP3AADIQHMAzIBZgMyAWYgAAMyAWYDMgFm
        AyEBMwMyAWUDBQEHAwoBDgMtAU8EAAMjAckDAgEDAzIBZgMyAWYDIQHMGAADEAEWAy4BrAsAAQEDKAFB
        AygBQQMAAQEIAAMuAawDEAEW2AADIQHMAzIBZgMyAWYEAAMsAbADMgGWAzQBdgMyAWkDNAF0AzQBiQQA
        AzIBZgMyAWYDCgENAzQBfQMfAdADNAF3Aw8BFQQAAyMByQMCAQMDMgFmAzIBZgMhAcwUAAMzAW0DIwHJ
        AzEBoAMpAbkDKgG4AzQBgQMAAQEDAAEBAzQBgQMqAbgDKQG5AzEBoAMjAcgDLAFN1AADIQHMAzIBZgMy
        AWYEAAMJAQwDJAE5Ay8BVwMyAWMDLwFZAyEBMgQAAzIBZgMyAWYDCQEMAwsBDwMHAQoDMgFoAy4BrAQA
        AyMByQMCAQMDMgFmAzIBZgMhAcwQAAMZASMDMAGjAzIBagMeAdIDCAELBAADNAF9Ay4BUwMuAVQDNAF9
        BAADCAELAx4B0gMzAW4DKAG9AwIBA9AAAyEBzAMyAWYDMgFmBAADLgFTAyABMAMMARADAwEEAwoBDgMa
        ASYEAAMyAWYDMgFmAyEBMwMgAc8DNAGEAxIBGAgAAyMByQMCAQMDMgFmAzIBZgMhAcwQAAMfAS8DMwGM
        AzQBdAMzAZMIAAMiATQDGwHYAxsB2AMiATQIAAMzAZMDNAF0AysBtQMFAQfQAAMhAcwDMgFmAzIBZgQA
        AzIBaAMxAZ8DKAG9AyMByQMnAb8DMwGVBAADMgFmAzIBZgQAAwQBBQMxAV0DJAHGAzABowQAAyMByQMC
        AQMDMgFmAzIBZgMhAcwTAAEBAzABowMkAcUDKAG+AxsBJwMHAQkDMQGhAyUBPAMlATwDMQGhAwcBCQMb
        AScDKAG+AyIBywM0AYLUAAMpAbkDMgFmAzIBZiAAAzIBZgMyAWYDJwE/AzIBmAMYASIEAAMVAR4EAAMj
        AckDAgEDAzIBZgMyAWYDKQG5FAADLgFSAzIBZQMzAW8DJgHDAy0BrwMtAVAIAAMtAVADLQGvAyYBwwMz
        AW8DMgFlAy4BUtgAAzIBZgMyAWYgAAMyAWYDMgFmAwABAQMrAUoDJwG/Ay4BqQMnAUAEAAMjAckDAgED
        AzIBZgMyAWYYAAMzAWwDKgFIAy0BUQMyAWcIAAMDAQQDAwEECAADMgFnAy0BUQMqAUgDMwFs2AADMQFd
        AyMByAM0AXoDLAFOAx4BLAMPARQDBQEHAwMBBAMRARcDLAFMAykBugMxAV0MAAMiATUDNAGBBAADIwHJ
        AxUBHgMhAcwDMQFdGAADMQFeAy8BWAMKAQ0DJwG/AzIBlgMpAbkDLAGwAywBsAMpAbkDMgGWAycBvwMK
        AQ0DLwFYAzEBXtwAAxgBIgMvAVcDNAGBAzABogMqAbgDJAHFAyMBxwMqAbcDNAGIAyUBOwMSARkDIgHL
        AywBThAAAyMByQMEAQYDEgEZHAADGgElAzIBlwQAAwcBCQMYASIQAAMYASIDBwEJBAADMgGYAxoBJf8A
        CQADEgEZAzEBnAMoAbwDJQE6CAADIwHJAwIBAyQAAy0BrwMaASYgAAMFAQcDLwGm/wAVAAMdASsDLgGq
        AykBugMqAUgDIgHLAwIBAyQAAxQBGwMoAb0DLwFYAwUBBxAAAwUBBwMvAVgDLwFV/wAhAAMbAScDMwGV
        AxMB5QMBAQIoAAMHAQkDMwFtAywBswMrAbUDLAGzAysBtAMrAbUDLAGzAzMBbQMHAQncAAFCAU0BPgcA
        AT4DAAEoAwABYAMAARgDAAEBAQABAQUAASABARYAA/8EAAGAAQABAQYAAQ8BwwHwAYABAAEBCQABwAEA
        AQMGAAEYAQABGAHAAUMBzwYAAR8B4AH4AcgBQwHPBgABHwHgATgByAFnAY8GAAEQASYBCAHAAYEBHwYA
        ARgBIQHAAeABAAE/BgABEAIgAeABAAF/BgABEAEmASAB4QEAAf8GAAETAaABYAHjARgBfwYAARABJAEg
        Af4BQgF/BgABHwHgASAB/AHDAT8GAAEQAiAB+AEAAR8GAAEQAiAB8AFCAQ8GAAEQASABYAHwAcMBDwYA
        ARABJAEgAfABAAEfBgABHwHgAaAB+AEYAR8GAAGfAeABIQH4AWYBHwYAAYABBwEhAfgBAAEfBgABwAEB
        AeMB+QE8AZ8GAAH/AfgBZwH8Af8BPwYAAf8B/gEHAfwBPAF/BgAC/wGHAf4BAAF/BgAL
</value>
  </data>
</root>